<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--设置放行的界面-->
    <http pattern="/*.html" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>
    <http pattern="../seller/add.do" security="none"></http>

    <http auto-config="true" use-expressions="false">
        <!--定义过滤规则-->
        <intercept-url pattern="/**" access="ROLE_SELLER"></intercept-url>

        <!--定义跳转的具体页面-->
        <!--login-processing-url 这是security提供的登录页面，默认是login，可以自己改-->
        <form-login
                login-processing-url="/login.do"
                login-page="/shoplogin.html"
                default-target-url="/admin/index.html"
                authentication-failure-url="/shoplogin.html"
                always-use-default-target="true"/>
        <!--always这个作用：登录之前我选择一个页面访问，会跳转到login页面，当登录之后，他会跳转到我们刚才访问的页面，而不是
        默认的首页，所以我们要设置这个默认目标为true，表示我们总是会访问默认登录页面-->
        <!--关闭CSRF,跨域请求伪造-->
        <csrf disabled="true"/>

        <!--允许使用内置框架页-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>
        <!--退出-->
        <logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/shoplogin.html"/>
        <!--<csrf disabled="true"/>-->
    </http>


    <!--配置认证,在数据库中验证用户名和密码-->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailService">
                <password-encoder ref="bcryptEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>

    <!--加密配置-->
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>

    <!-- 认证管理器 -->
    <beans:bean id="userDetailService" class="com.pinyougou.shop.service.UserDetailServiceImpl">
        <beans:property name="sellerService" ref="sellerService"></beans:property>
    </beans:bean>

    <!--引入Dubbo服务-->
    <dubbo:application name="pinyougou-shop-web"/>
    <dubbo:registry address="zookeeper://192.168.25.128:2181"/>
    <!--这里引入的是一个接口-->
    <dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>



</beans:beans>